import java.util.Vector;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.Collections;


class Menus		// → 완성
{
	public static final int E_ADD = 1;			//-- 요소 추가
	public static final int E_DISP = 2;			//-- 요소 출력
	public static final int E_FIND = 3;			//-- 요소 검색
	public static final int E_DEL = 4;			//-- 요소 삭제
	public static final int E_CHA = 5;			//-- 요소 변경
	public static final int E_EXIT = 6;			//-- 종료
}

public class Test164
{
	// 주요 속성 구성	→ 완성
	private static final Vector<Object> vt; //-- 자료구조
	private static BufferedReader br;		//-- 입력 시 활용
	private static Integer sel;				//-- 선택 값
	private static String con;				//-- 계속 진행 여부

	// static(정적) 초기화 블럭
	static
	{
		// Vector 자료구조 생성
		vt = new Vector<Object>();

		// BufferedReader 인스턴스 생성
		br = new BufferedReader(new InputStreamReader(System.in));

		// 사용자 입력값 초기화
		sel = 1;
		con = "Y";
	}

	
	// 메뉴 출력 메소드
	public static void menuDisp()
	{
		System.out.printf("\n\t===[메뉴 선택]===\n");
		System.out.printf("\t1. 요소 추가\n");
		System.out.printf("\t2. 요소 출력\n");
		System.out.printf("\t3. 요소 검색\n");
		System.out.printf("\t4. 요소 삭제\n");
		System.out.printf("\t5. 요소 변경\n");
		System.out.printf("\t6. 종료\n");
		System.out.printf("\t================\n");
	}

	// 메뉴 선택 메소드
	public static void menuSelect() throws IOException, NumberFormatException
	{	
		try
		{
			do
			{
			System.out.printf(">> 메뉴 선택(1~6) : ");
			sel = Integer.parseInt(br.readLine());
			}
			while (sel<1 || sel>6);
		}
		catch (NumberFormatException e)
		{
			System.out.printf("\n※1~6사이의 숫자만 입력해주세요~!!!\n");
			do
			{
			System.out.printf(">> 메뉴 선택(1~6) : ");
			sel = Integer.parseInt(br.readLine());
			}
			while (sel<1 || sel>6);
		}
		
	
	}

	// 선택된 메뉴 실행에 따른 기능 호출 메소드
	public static void menuRun() throws IOException
	{	
		if (sel==1)
			addElement();
		else if (sel==2)
			dispElement();
		else if (sel==3)
			findElement();
		else if (sel==4)
			delElement();
		else if (sel==5)
			chaElement();
		else
			exit();
	}

	// 자료구조에 요소 추가(입력) 메소드
	public static void addElement() throws IOException
	{	
		String str;
		int i=1;
		
		do
		{
			System.out.printf("\n%d번째 요소 입력 : ", i);
			str = br.readLine();
			vt.add(str);
			System.out.printf("%d번째 요소 입력 성공~!!!\n", i);
			System.out.printf("요소 입력 계속(Y/N) : ");
			con = br.readLine();
			i++;
		}
		while (con.equals("Y") || con.equals("y"));	
	}

	// 자료구조 전체 요소 출력 메소드
	public static void dispElement() throws IOException
	{	
		System.out.printf("\n[벡터 전체 출력]\n");
		String str;
		int length = vt.size();
		for (int i=0; i<length; i++)
		{
			str = (String)vt.get(i);
			System.out.println(str);
		}
		System.out.printf("\n벡터 전체 출력 완료~!!!\n");
		
	}

	// 자료구조 내 요소 검색 메소드
	public static void findElement() throws IOException
	{	
		
		System.out.printf("\n>> 검색할 요소 입력 : ");
		String str = br.readLine();
		boolean flag = vt.contains(str);
		if (vt.contains(str))
		{
			System.out.printf("\n[검색 결과 출력]\n");
			System.out.printf("항목이 존재합니다.\n");
		}
		else
		{
			System.out.printf("\n[검색 결과 출력]\n");
			System.out.printf("항목이 존재하지 않습니다.\n");
		}
	}

	// 자료구조 내 요소 삭제 메소드
	public static void delElement() throws IOException
	{
		System.out.printf(">> 삭제할 요소 입력 : ");
		String str = br.readLine();
		int a = vt.indexOf(str);
		
		if (a<0)
		{	
			System.out.printf("\n[삭제 결과 출력]\n");
			System.out.println("항목이 존재하지 않아 삭제할 수 없습니다.");
		}
		else
		{	
			vt.remove(a);
			System.out.printf("\n[삭제 결과 출력]\n");
			System.out.printf("%s 항목이 삭제되었습니다.\n", str);
		}
	}

	// 자료구조 내 요소 수정(변경) 메소드
	public static void chaElement() throws IOException
	{	
		String nstr = "";
		System.out.print(">> 변경할 요소 입력 : ");
		String str = br.readLine();

		if (vt.contains(str))
		{
			System.out.print(">> 수정할 내용 입력 : ");
			nstr = br.readLine();
			int i = vt.indexOf(str);
			vt.set(i, nstr);
			System.out.println("\n[변경 결과 출력]");
			System.out.printf("%s 가 %s로 변경이 완료되었습니다.\n", str, nstr);

		}
		else
		{
			System.out.println("\n[변경 결과 출력]");
			System.out.println("변경할 대상이 존재하지 않습니다.");
		}
	
		
	}

	// 프로그램 종료 메소드 → 완성
	public static void exit()
	{
		System.out.println("\n프로그램 종료~!!!");
		//return;
		System.exit(-1);	
	}

	// main() 메소드 → 완성
	public static void main(String[] args) throws IOException, NumberFormatException
	{
		
		do
		{
			menuDisp();
			menuSelect();
			menuRun();
		}
		while (true);
		

	}
}